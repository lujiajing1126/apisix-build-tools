name: Build and Push image

on:
  push:
    tags:
      - "apisix-base/*"

jobs:
  publish_image:
    strategy:
      fail-fast: true # In case one of the jobs fails, the other jobs will be cancelled
      matrix:
        runs-on: [buildjet-4vcpu-ubuntu-2204, buildjet-4vcpu-ubuntu-2204-arm]
    name: Build and Push apisix-base image - ${{matrix.runs-on}}
    runs-on: ${{matrix.runs-on}}
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Extract apisix-base version
        shell: bash
        run: |
          echo "apisix_base_version=${GITHUB_REF##*/}" >> "$GITHUB_ENV"

      - name: Extract Docker Arch
        shell: bash
        run: |
          if [ "${{ matrix.runs-on }}" == "buildjet-4vcpu-ubuntu-2204" ]; then
            echo "docker_arch=amd64" >> "$GITHUB_ENV"
          else
            echo "docker_arch=arm64" >> "$GITHUB_ENV"
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        timeout-minutes: 300
        with:
          push: true
          platforms: linux/${{ env.docker_arch }}
          tags: ghcr.io/lujiajing1126/apisix-base:${{ env.apisix_base_version }}-${{ env.docker_arch }}
          file: ./dockerfiles/Dockerfile.apisix-base.apk
          build-args: |
            VERSION=${{ env.apisix_base_version }}

  publish_manifest:
    needs: [publish_image]
    runs-on: "ubuntu-latest"
    steps:
      - name: Extract apisix-base version
        shell: bash
        run: |
          echo "apisix_base_version=${GITHUB_REF##*/}" >> "$GITHUB_ENV"
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest images
        uses: Noelware/docker-manifest-action@v0.3.1
        with:
          inputs: ghcr.io/lujiajing1126/apisix-base:${{ env.apisix_base_version }}
          images: ghcr.io/lujiajing1126/apisix-base:${{ env.apisix_base_version }}-amd64,ghcr.io/lujiajing1126/apisix-base:${{ env.apisix_base_version }}-arm64
          push: true
